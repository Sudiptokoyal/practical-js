"use strict";(self.webpackChunkpractical_javascript=self.webpackChunkpractical_javascript||[]).push([[487],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return n?a.createElement(m,r(r({ref:t},u),{},{components:n})):a.createElement(m,r({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1011:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],s={sidebar_position:3},l="Creation and Hoisting",c={unversionedId:"tutorial-basics/hoisting",id:"tutorial-basics/hoisting",title:"Creation and Hoisting",description:"As we discussed that before your actual code excute, javascript engine parse your code makes memory slots for your variables and your functions. That's called base execution or global execution context.",source:"@site/docs/tutorial-basics/hoisting.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/hoisting",permalink:"/practical-js/docs/tutorial-basics/hoisting",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/hoisting.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Global Enviroment",permalink:"/practical-js/docs/tutorial-basics/global-object-env"},next:{title:"Deploy your site",permalink:"/practical-js/docs/tutorial-basics/deploy-your-site"}},u={},d=[{value:"Variable and Function Hoisting",id:"variable-and-function-hoisting",level:2},{value:"let and const hoisting",id:"let-and-const-hoisting",level:2},{value:"Function and class expression hoisting",id:"function-and-class-expression-hoisting",level:2},{value:"class hoisting",id:"class-hoisting",level:2}],p={toc:d};function h(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creation-and-hoisting"},"Creation and Hoisting"),(0,o.kt)("p",null,"As we discussed that before your actual code excute, javascript engine parse your code makes memory slots for your variables and your functions. That's called base execution or global execution context."),(0,o.kt)("p",null,"However JavaScript only hoists declarations, not initializations!\nThis means that initialization doesn't happen until the associated line of code is executed, even if the variable was originally initialized then declared, or declared and initialized in the same line."),(0,o.kt)("h2",{id:"variable-and-function-hoisting"},"Variable and Function Hoisting"),(0,o.kt)("p",null,"It's phenomen where your variables, functions are created in global execution phase."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var a = 10;\nfunction b() {\n    console.log(20);\n}\n\nconsole.log(a); // 10\nb(); // 20\n")),(0,o.kt)("p",null,"But what if we make it like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"console.log(a); // undefined\nb(); // 20\nvar a = 10;\nfunction b() {\n    console.log(20);\n}\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"undefined")," is javascript's special value."))),(0,o.kt)("p",null,"This is happening because of ",(0,o.kt)("inlineCode",{parentName:"p"},"var a")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"function b")," both are hoisted or created by js engine in global excution context. For variable, js engine assign default value and that's ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,o.kt)("p",null,"If we forget the declaration altogether (and only initialize the value) the variable isn't hoisted. Trying to read the variable before it is initialized results in ReferenceError exception."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"console.log(num); // Throws ReferenceError exception - the interpreter doesn't know about `num`.\nnum = 6; // Initialization\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Always try to define your variables, function, class before accessing it."))),(0,o.kt)("p",null,"Note however that initialization also causes declaration (if not already declared). The code snippet below will work, because even though it isn't hoisted, the variable is initialized and effectively declared before it is used."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'a = "Cran"; // Initialize a\nb = "berry"; // Initialize b\n\nconsole.log(a + "" + b); // \'Cranberry\'\n')),(0,o.kt)("h2",{id:"let-and-const-hoisting"},"let and const hoisting"),(0,o.kt)("p",null,"Variables declared with let and const are also hoisted but, unlike var, are not initialized with a default value. An exception will be thrown if a variable declared with let or const is read before it is initialized."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"console.log(num); // Throws ReferenceError exception as the variable value is uninitialized\nlet num = 6; // Initialization\n")),(0,o.kt)("h2",{id:"function-and-class-expression-hoisting"},"Function and class expression hoisting"),(0,o.kt)("p",null,"Function expressions and class expressions are not hoisted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const myFunc = function () {\n    console.log("Hello world");\n};\n\nmyFunc(); // Hello world\n')),(0,o.kt)("p",null,"But"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'consosle.log(myFunc); // undefined, because variable is hoisted but not function expression\nmyFunc(); // Reffrence error\nconst myFunc = function () {\n    console.log("Hello world");\n};\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The expressions evaluate to a function or class (respectively), which are typically assigned to a variable."),(0,o.kt)("li",{parentName:"ul"},"In this case the variable declaration is hoisted and the expression is its initialization. Therefore the expressions are not evaluated until the relevant line is executed.")),(0,o.kt)("h2",{id:"class-hoisting"},"class hoisting"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Classes defined using a class declaration are hoisted, which means that JavaScript has a reference to the class."),(0,o.kt)("li",{parentName:"ul"},"However the class is not initialized by default, so any code that uses it before the line in which it is initialized is executed will throw a ReferenceError.")))}h.isMDXComponent=!0}}]);